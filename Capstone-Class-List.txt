
ErrorResponse
    - Description: Allows the GlobalException class to give detailed errors.
    - Fields:
        - LocalDateTime timestamp
        - String message
    - Methods:
        - LocalDateTime getTimestamp()
        - String getMessage()
        - ErrorResponse(String message)
	- ErrorResponse(Result<T> result)
GlobalExceptionHandler
    - Description: Handles backend exceptions and provides an informative response.
    - Methods:
        - ResponseEntity<ErrorResponse> handleException(DataIntegrityViolationException ex)
        - ResponseEntity<ErrorResponse> handleException(Exception ex)
UserController
    - Description: Maps CRUD operations to backend user service.
    - Fields:
        - UserService service
    - Methods:
        - UserController(UserService service)
        - @GetMapping("/{userId}") User findById(@PathVariable int userId)
        - @PostMapping ResponseEntity<Object> add(@RequestBody User user)
        - @PutMapping("/{userId}") ResponseEntity<Object> update(@PathVariable int userId, @RequestBody User user)
	-@GetMapping() List<User> findAll()
    - @DeleteMapping("/{userId}") ResponseEntity<Void> deleteById(@PathVariable int userId)
ProfileController
    - Description: Maps CRUD operations to backend profile service.
    - Fields:
        - ProfileService service
    - Methods:
        - ProfileController(ProfileService service)
        - @GetMapping("/{profileId}") Profile findById(@PathVariable int profileId)
        - @PostMapping ResponseEntity<Object> add(@RequestBody Profile profile)
        - @PutMapping("/{profileId}") ResponseEntity<Object> update(@PathVariable int profileId, @RequestBody Profile profile)
        - @DeleteMapping("/{profileId}") ResponseEntity<Void> deleteById(@PathVariable int profileId)
GameController
    - Description: Maps CRUD operations to backend game service.
    - Fields:
        - GameService service
    - Methods
        - GameController(GameService service)
        - @GetMapping List<Game> findAll()
        - @GetMapping("/{gameId}") Game findById(@PathVariable int gameId)
        - @GetMapping("/{genre}") List<Game> findByGenre(@PathVariable String genre)
        - @PostMapping ResponseEntity<Object> add(@RequestBody Game game)
        - @PutMapping("/{gameId}") ResponseEntity<Object> update(@PathVariable int gameId, @RequestBody Game game)
        - @DeleteMapping("/{gameId}") ResponseEntity<Void> deleteById(@PathVariable int gameId)
ReviewController
    - Description: Maps CRUD operations to backend review service.
    - Fields
        - ReviewService service
    - Methods
        - ReviewController(ReviewService service)
        - @GetMapping("/{reviewId}") Review findById(@PathVariable int reviewId)  - @GetMapping("/game/{gameId}") List<Review> findByGame(@PathVariable int gameId)   - @GetMapping("/user/{userId}") List<Review> findByUser(@PathVariable int userId)
        - @PostMapping ResponseEntity<Object> add(@RequestBody Review review)
        - @PutMapping("/{reviewId}") ResponseEntity<Object> update(@PathVariable int reviewId, @RequestBody Review review)
        - @DeleteMapping("/{reviewId}") ResponseEntity<Void> deleteById(@PathVariable int reviewId)
UserMapper
    - Description: Maps a ResultSet from a SQL query to a new User object.
    - Methods:
        - User mapRow(ResultSet resultSet, int i)
ProfileMapper
    - Description: Maps a ResultSet from a SQL query to a new Profile object.
    - Methods:
        - Profile mapRow(ResultSet resultSet, int i)
GameMapper
    - Description: Maps a ResultSet from a SQL query to a new Game object.
    - Methods:
        - Game mapRow(ResultSet resultSet, int i)
ReviewMapper
    - Description: Maps a ResultSet from a SQL query to a new Review object.
    - Methods:
        - Review mapRow(ResultSet resultSet, int i)
UserRepository
    - Description: Interface for a user repository that interacts with the database.
    - Methods:
        - List<User> findAll()
        - User findById(int userId)
        - User add(User user)
        - boolean update(	User user)
        - boolean deleteById(int userId)
ProfileRepository
    - Description: Interface for a profile repository that interacts with the database.
    - Methods:
        - List<Profile> findAll()
        - Profile findById(int profileId)
        - Profile add(Profile profile)
        - boolean update(Profile profile)
        - boolean deleteById(int profileId)
GameRepository
    - Description: Interface for a game repository that interacts with the database.
    - Methods:
        - List<Game> findAll()
        - List<Game> findByGenre()
        - Game findById(int gameId)
        - Game add(Game game)
        - boolean update(Game game)
        - boolean deleteById(int gameId)
ReviewRepository
    - Description: Interface for a review repository that interacts with the database.
    - Methods:
        - List<Review> findAll()
        - List<Review> findByGameId(int id)
        - List<Review> findByUserId(int id)
        - Review findById(int reviewId)
        - Review add(Review review)
        - boolean update(Review review)
        - boolean deleteById(int reviewId)
UserJdbcTemplateRepository
    - Description: Implements the UserRepository interface.
    - Methods: Each method in the UserRepository interface.
ProfileJdbcTemplateRepository
    - Description: Implements the ProfileRepository interface.
    - Methods: Each method in the ProfileRepository interface.
GameJdbcTemplateRepository
    - Description: Implements the GameRepository interface.
    - Methods: Each method in the GameRepository interface.
ReviewJdbcTemplateRepository
    - Description: Implements the ReviewRepository interface.
    - Methods: Each method in the ReviewRepository interface.
UserService
    - Description: Handles business logic and communicates with user controller and user repository.
    - Fields:
        - UserRepository repository
    - Methods:
        - UserService(UserRepository repository)
        - List<User> findAll()
        - User findById(int userId)
        - Result<User> add(User user)
        - Result<User> update(User user)
        - boolean deleteById(int userId)
        
ProfileService
    - Description: Handles business logic and communicates with profile controller and profile repository.
    - Fields:
        - ProfileRepository repository
    - Methods:
        - ProfileService(ProfileRepository repository)
        - List<Profile> findAll()
        - Profile findById(int profileId)
        - Result<Profile> add(Profile profile)
        - Result<Profile> update(Profile profile)
        - boolean deleteById(int profileId)
        
GameService
    - Description: Handles business logic and communicates with game controller and game repository.
    - Fields:
        - GameRepository repository
    - Methods:
        - GameService(GameRepository repository)
        - List<Game> findAll()
        - List<Game> findByGenre()
        - Game findById(int gameId)
        - Result<Game> add(Game game)
        - Result<Game> update(Game game)
        - boolean deleteById(int gameId)
        
ReviewService
    - Description: Handles business logic and communicates with review controller and review repository.
    - Fields:
        - ReviewRepository repository
    - Methods:
        - ReviewService(ReviewRepository repository)
        - List<Review> findAll()
        - List<Review> findByGame()
        - List<Review> findByUser()
        - Review findById(int reviewId)
        - Result<Review> add(Review review)
        - Result<Review> update(Review review)
        - boolean deleteById(int reviewId)
       
User
    - Description: Model for a user. Holds a user's data.
    - Fields:
        - int userId
        - String username
        - String email
        - String password
        - Profile profile
    - Methods:
        - int getUserId()
        - void setUserId(int userId)
        - String getUsername()
        - void setUsername(String username)
        - String getEmail()
        - void setEmail(String email)
        - String getPassword()
        - void setPassword(String password)
        - Profile getProfile()
        - void setProfile(Profile profile)
Profile
    - Description: Model for a profile. Holds a profile's data.
    - Fields:
        - int profileId
        - String favoriteGenre
        - Game favoriteGame
        - String description
        - Region region
        - LocalDate dateJoined
    - Methods:
        - getters and setters for each field
Game
    - Description: Model for a game. Holds a game's data.
    - Fields:
        - int gameId
        - String title
        - String developer
        - String publisher
        - String genre
        - double ESRB rating
    - Methods
        - getters and setters for each field
Review
    - Description: Model for a review. Holds a review's data.
    - Fields:
        - User user
        - Game game
        - double rating
        - String review
    - Methods:
        - getters and setters for each field